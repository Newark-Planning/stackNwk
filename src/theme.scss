//Global styles for Clr Components
$clr-use-custom-properties: false;
$clr-global-app-background: #eaedf0;
$clr-global-selection-color: lightgray;
$clr-global-hover-bg-color: hsl(198, 65%, 57%);
$primary-color: #0d47a1;
$info-color: hsl(198, 79%, 28%);
$success-color: hsl(122, 45%, 23%);
$danger-color: hsl(357, 50%, 35%);
$warning-color: hsl(47, 87%, 27%);
$app-info-color: hsl(178, 90%, 39%);
$app-success-color: hsl(90, 67%, 38%);
$app-danger-color: hsl(3, 90%, 62%);
$app-warning-color: hsl(49, 98%, 51%);
$white: hsl(0, 0%, 100%);
$white-alt: hsl(210, 16%, 93%);
$black: hsl(0, 0%, 0%);
$black-alt: hsl(203, 30%, 8%);
$black-alt-2: hsl(201, 30%, 13%);
$black-light: hsla(0, 0%, 100%, 0.1);
$gray: hsl(211, 10%, 47%);
$gray-alt: hsl(200, 30%, 12%);
$gray-light: hsl(203, 16%, 72%);
$purple: hsl(281, 44%, 62%);
$purple-dark: hsl(233, 26%, 33%);
$blue: hsl(201, 100%, 36%);
$blue-hover: hsl(194, 78%, 63%);
$blue-light: hsl(194, 57%, 71%);
$blue-dark: hsl(206, 63%, 27%);
$red-hover: hsl(3, 100%, 69%);
$red-dark: hsl(315, 27%, 28%);
$orange: hsl(31, 100%, 60%);
$green: hsl(92, 79%, 40%);
$green-hover: hsl(83, 77%, 44%);
$green-dark: hsl(195, 65%, 24%);
$dropdown-bg: $white-alt;
$clr-global-font-color: $black;
$clr-font: 'Segoe UI',
'Open Sans',
sans-serif;

/*********
  * The close class is a utility class that can be applied to elements with a clr-icon thats used for closing something.
  * There are two variables that control the normal and hovered states.
  * Usages:
  * - _close.clarity.scss
  *
  * Component's with variables affected in the dark theme (this file)
  * - ??
  */

$clr-close-color--normal: hsl(201, 17%, 80%);
$clr-close-color--normal-opacity: 1;
$clr-close-color--hover: hsl(201, 0%, 100%);
$clr-close-color--hover-opacity: 1;
// END close

/*********
  * Name: Popover box-shadow-color
  * Usages: ./_dropdown.clarity.scss
  * Usages: ./_datepicker.clarity.scss
  */

$clr-popover-box-shadow-color: hsla(0, 0%, 0%, 0.5);

/*********
  * Name: Link (and link state colors)
  * Description the color for links and the active, hovered and visited state
  * Usages: ./_reboot.clarity.scss
  */

$clr-link-active-color: $app-info-color;
$clr-link-color: $app-info-color;
$clr-link-hover-color: $app-info-color;
$clr-link-visited-color: hsl(228, 55%, 75%);
// END: Global Clarity Variables

/**********
  * Alerts
  * Alerts are banners that communicate a message with a severity attached to it. They grab the userâ€™s attention to
  * provide critical information needed in context. These variables control the background-color and font color for each
  * of the alert types.
  *
  * There are seven types of alert and we set the background-color and font color for each here.
  */

$clr-theme-alert-font-color: $white-alt;
$clr-theme-app-alert-font-color: $black;
// Info type
$clr-alert-info-bg-color: $info-color;
$clr-alert-info-font-color: $clr-theme-alert-font-color;
$clr-alert-info-border-color: transparent;
$clr-alert-info-icon-color: $clr-theme-alert-font-color;
// Success type
$clr-alert-success-bg-color: $success-color;
$clr-alert-success-font-color: $clr-theme-alert-font-color;
$clr-alert-success-border-color: transparent;
$clr-alert-success-icon-color: $clr-theme-alert-font-color;
// Danger type
$clr-alert-danger-bg-color: $danger-color;
$clr-alert-danger-font-color: $clr-theme-alert-font-color;
$clr-alert-danger-border-color: transparent;
$clr-alert-danger-icon-color: $clr-theme-alert-font-color;
// Warning type
$clr-alert-warning-bg-color: $warning-color;
$clr-alert-warning-font-color: $clr-theme-alert-font-color;
$clr-alert-warning-border-color: transparent;
$clr-alert-warning-icon-color: $clr-theme-alert-font-color;
// App Info type
$clr-app-alert-info-bg-color: $app-info-color;
$clr-app-alert-info-font-color: $clr-theme-app-alert-font-color;
$clr-app-alert-info-border-color: transparent;
$clr-app-alert-info-icon-color: $clr-theme-app-alert-font-color;
// App warning type
$clr-app-alert-warning-bg-color: $app-warning-color;
$clr-app-alert-warning-icon-color: $clr-theme-app-alert-font-color;
$clr-app-alert-warning-font-color: $clr-theme-app-alert-font-color;
$clr-app-alert-warning-border-color: transparent;
// App danger type
$clr-app-alert-danger-bg-color: $app-danger-color;
$clr-app-alert-danger-icon-color: $clr-theme-app-alert-font-color;
$clr-app-alert-danger-font-color: $clr-theme-app-alert-font-color;
$clr-app-alert-danger-border-color: transparent;
$clr-alert-action-color: $white; // Used for dropdowns on the right side of an alert
$clr-alert-action-active-color: $white; // Alert dropdowns when they are clicked on
$clr-app-alert-close-icon-color: $clr-close-color--normal; // Colors for the 'X' close btn in global alerts
$clr-alert-close-icon-opacity: 1;
$clr-alert-close-icon-hover-opacity: 1;
// Close icon colors for APP-LEVEL ALERTS
$clr-app-level-alert-color: $black;
$clr-app-alert-close-icon-color: $black;

/**********
  * END: Alerts
  */


/*****************
  * Badge
  * Badges provide a method to highlight a count of an element either next to it or inside the element itself.
  * Here you can set the background-color and font color(s) for the various badge types.
  * There are five color options and four status types a Clarity label may have.
  *
  */

$clr-badge-font-color-light: $black;
$clr-badge-font-color-dark: $black;
$clr-badge-info-bg-color: $app-info-color;
$clr-badge-info-color: $black;
$clr-badge-success-bg-color: $app-success-color;
$clr-badge-success-color: $black;
$clr-badge-warning-bg-color: $app-warning-color;
$clr-badge-warning-color: $black;
$clr-badge-danger-bg-color: $app-danger-color;
$clr-badge-danger-color: $black;
$clr-badge-gray-bg-color: $gray;
$clr-badge-purple-bg-color: $purple;
$clr-badge-blue-bg-color: $blue;
$clr-badge-orange-bg-color: $orange;
$clr-badge-light-blue-bg-color: $blue-light;
// END: Badge

/*****************
  * Buttons
  * Buttons allow an application to communicate action and direct user intent.
  * Buttons can be: solid, outlined or flat.
  * Solid and outline have four types: primary, success, warning, danger.
  * Buttons can be disabled.
  *
  * For each button type, use these variables to change the following button properties:
  * - background color
  * - border
  * - (font) color
  * - :hover background-color
  * - :hover (font) color
  * - box-shadow color
  *
  *  NOTE: these variables also affect button groups.
  *
  */

// Use these to control the disabled appearance for all buttons.
$clr-btn-disabled-font-color: $black;
$clr-btn-outline-disabled-font-color: $white;
$clr-btn-disabled-bg-color: $white;
$clr-btn-disabled-border-color: $white;
// Disabled icon color
$clr-btn-icon-disabled-color: $clr-btn-outline-disabled-font-color;
// Default button
$clr-btn-default-color: $white; // border-color, color, checked-background-color
$clr-btn-default-bg-color: $app-info-color; // background-color, disabled-background-color
$clr-btn-default-hover-bg-color: $gray-alt; // hover-background-color
$clr-btn-default-hover-color: $gray-light; // hover-color
$clr-btn-default-box-shadow-color: $black; // active-box-shadow-color
$clr-btn-default-checked-color: $white; // checked-color
$clr-btn-default-checked-bg-color: $clr-btn-default-color;
$clr-btn-default-disabled-color: $clr-btn-outline-disabled-font-color; // disabled-color
$clr-btn-default-disabled-border-color: $clr-btn-disabled-border-color; // disabled-border-color
// Default button
$clr-btn-default-outline-color: $app-info-color; // border-color, color, checked-background-color
$clr-btn-default-outline-bg-color: transparent; // background-color, disabled-background-color
$clr-btn-default-outline-hover-bg-color: $black-light; // hover-background-color
$clr-btn-default-outline-hover-color: $blue-hover; // hover-color
$clr-btn-default-outline-box-shadow-color: $black; // active-box-shadow-color
$clr-btn-default-outline-checked-color: $white; // checked-color
$clr-btn-default-outline-checked-bg-color: $clr-btn-default-outline-color; // checked-color
$clr-btn-default-outline-disabled-color: $clr-btn-outline-disabled-font-color; // disabled-color
$clr-btn-default-outline-disabled-border-color: $clr-btn-disabled-border-color; // disabled-border-color
$clr-btn-default-outline-disabled-checked-color: $clr-btn-disabled-bg-color;
// Primary button
$clr-btn-primary-color: $white; // color, checked-background-color
$clr-btn-primary-bg-color: $primary-color; // background-color, disabled-background-color
$clr-btn-primary-border-color: $primary-color; // border-color
$clr-btn-primary-hover-bg-color: $blue-light; // hover-background-color
$clr-btn-primary-hover-color: $black; // hover-color
$clr-btn-primary-box-shadow-color: hsl(205, 100%, 34%); // active-box-shadow-color
$clr-btn-primary-checked-color: $white; // checked-color
$clr-btn-primary-disabled-color: $clr-btn-disabled-font-color; // disabled-color
$clr-btn-primary-disabled-bg-color: $clr-btn-disabled-bg-color; // disabled-bg-color
$clr-btn-primary-disabled-border-color: $clr-btn-disabled-border-color; // disabled-border-color
// Success button
$clr-btn-success-color: $black; // color, checked-color,
$clr-btn-success-bg-color: $green; // background-color, border-color
$clr-btn-success-hover-bg-color: $green-hover; // hover-background-color
$clr-btn-success-hover-color: $clr-btn-success-color; // hover-color
$clr-btn-success-box-shadow-color: hsl(98, 100%, 21%); // active-box-shadow-color
$clr-btn-success-checked-bg-color: $clr-btn-success-hover-bg-color; // checked-background-color
$clr-btn-success-disabled-color: $clr-btn-disabled-font-color; // disabled-color
$clr-btn-success-disabled-bg-color: $clr-btn-disabled-bg-color; // disabled-background-color
$clr-btn-success-disabled-border-color: $clr-btn-disabled-border-color; // disabled-border-color
// Success outline button
$clr-btn-success-outline-color: $green; // color
$clr-btn-success-outline-border-color: $green; // border-color, checked-background-color
$clr-btn-success-outline-hover-bg-color: $black-light; // hover-background-color
$clr-btn-success-outline-hover-color: $green-hover; // hover-color
$clr-btn-success-outline-box-shadow-color: $black; // active-box-shadow-color
$clr-btn-success-outline-checked-color: $white; // checked-color
$clr-btn-success-outline-disabled-color: $clr-btn-outline-disabled-font-color; // disabled-color
$clr-btn-success-outline-disabled-bg-color: transparent; // disabled-background-color
$clr-btn-success-outline-disabled-border-color: $clr-btn-disabled-border-color; // disabled-border-color
// Danger button
$clr-btn-danger-color: $black; // color, checked-color,
$clr-btn-danger-bg-color: $app-danger-color; // background-color, border-color
$clr-btn-danger-hover-bg-color: $red-hover; // hover-background-color
$clr-btn-danger-hover-color: $clr-btn-danger-color; // hover-color
$clr-btn-danger-box-shadow-color: hsl(10, 100%, 39%); // active-box-shadow-color
$clr-btn-danger-checked-bg-color: hsl(10, 100%, 39%); // checked-background-color
$clr-btn-danger-disabled-color: $clr-btn-disabled-font-color; // disabled-color,
$clr-btn-danger-disabled-bg-color: $clr-btn-disabled-bg-color; // disabled-background-color
$clr-btn-danger-disabled-border-color: $clr-btn-disabled-border-color; // disabled-border-color
// Danger outline button
$clr-btn-danger-outline-border-color: $app-danger-color; // border-color
$clr-btn-danger-outline-color: $app-danger-color; // color
$clr-btn-danger-outline-hover-bg-color: $black-light; // hover-background-color
$clr-btn-danger-outline-hover-color: $red-hover; // hover-color
$clr-btn-danger-outline-box-shadow-color: $black; // active-box-shadow-color
$clr-btn-danger-outline-checked-bg-color: $app-danger-color; // checked-background-color
$clr-btn-danger-outline-checked-color: $white; // checked-color
$clr-btn-danger-outline-disabled-color: $clr-btn-outline-disabled-font-color; // disabled-color
$clr-btn-danger-outline-disabled-bg-color: transparent; // disabled-background-color
$clr-btn-danger-outline-disabled-border-color: $clr-btn-disabled-border-color; // disabled-border-color
// Link button
$clr-btn-link-color: $app-info-color; // color
$clr-btn-link-hover-color: $blue-hover; // hover-color
$clr-btn-link-checked-color: $app-info-color; // checked-color
$clr-btn-link-disabled-color: $clr-btn-outline-disabled-font-color; // disabled-color
// Inverse button
$clr-btn-inverse-border-color: $white-alt; // border-color
$clr-btn-inverse-bg-color: transparent; // background-color
$clr-btn-inverse-color: $white-alt; // color
$clr-btn-inverse-hover-bg-color: rgba(0, 0, 0, 0.1); // hover-background-color
$clr-btn-inverse-hover-color: $white; // hover-color
$clr-btn-inverse-box-shadow-color: hsl(203, 14%, 70%); // active-box-shadow-color
$clr-btn-inverse-checked-bg-color: hsla(0, 0%, 100%, 0.15); // checked-background-color
$clr-btn-inverse-checked-color: $white; // checked-color
$clr-btn-inverse-disabled-color: $clr-btn-outline-disabled-font-color; // disabled-color
$clr-btn-inverse-disabled-border-color: $clr-btn-disabled-border-color; // disabled-border-color
// END: Buttons

/**********
  * Card
  * A card presents high-level information and can guide the user toward related actions and details. Use these variables
  * to change the look and feel of your cards.
  *
  * Usage: ../layout/_card.clarity.scss
  */

$clr-card-bg-color: $white;
$clr-card-border-color: $app-info-color;
$clr-card-title-color: $app-info-color;
$clr-card-box-shadow: 0 0.15rem 0 0 $clr-card-border-color;
$clr-card-divider-color: $clr-card-border-color;
// END: Card

/**********
  * Datagrid
  * Datagrids are for organizing large volumes of data that users can scan, compare, and perform actions on.
  *
  * Usage: ../data/datagrid/_datagrid.clarity.scss
  */

$clr-datagrid-icon-color: $gray-light;
$clr-datagrid-row-hover: $clr-global-hover-bg-color;
$clr-datagrid-row-selected: $white;
$clr-datagrid-popover-bg-color: $dropdown-bg;
$clr-datagrid-action-toggle: $gray-light;
$clr-datagrid-pagination-btn-color: $white-alt;
$clr-datagrid-pagination-btn-disabled-color: $white-alt;
$clr-datagrid-pagination-btn-disabled-opacity: 0.46;
$clr-datagrid-pagination-input-border-color: hsl(208, 16%, 34%);
$clr-datagrid-pagination-input-border-focus-color: $app-info-color;
$clr-datagrid-popover-border-color: $black;
$clr-datagrid-action-popover-hover-color: $clr-datagrid-row-hover;
$clr-datagrid-loading-background: rgba(0, 0, 0, 0.5);
// END: Datagrid

/*********
  * Dropdown
  * A dropdown menu allows the user to choose an option or action from a contextual list. Use these variables to change
  * the look-n-feel of your dropdowns.
  *
  * Usage: ../popover/dropdown/_dropdown.clarity.scss
  */

$clr-dropdown-active-text-color: $black;
$clr-dropdown-bg-color: $dropdown-bg;
$clr-dropdown-text-color: $black;
$clr-dropdown-item-color: $black;
$clr-dropdown-border-color: $black;
$clr-dropdown-child-border-color: $black;
$clr-dropdown-bg-active-color: $clr-global-selection-color;
$clr-dropdown-bg-hover-color: $clr-global-hover-bg-color;
$clr-dropdown-selection-color: $clr-global-selection-color;
$clr-dropdown-box-shadow: $clr-popover-box-shadow-color;
$clr-dropdown-divider-color: $clr-dropdown-border-color;
$clr-dropdown-header-color: $black;
// END: Dropdown overrides
// Datepicker
$clr-calendar-background-color: $dropdown-bg;
$clr-calendar-border-color: $black;
$clr-datepicker-trigger-color: $app-info-color;
$clr-datepicker-trigger-hover-color: $blue-hover;
$clr-calendar-btn-color: $app-info-color;
$clr-calendar-btn-hover-focus-color: $clr-global-hover-bg-color;
$clr-calendar-active-cell-background-color: $clr-global-selection-color;
$clr-calendar-active-focus-cell-background-color: $clr-global-selection-color;
$clr-calendar-today-date-cell-color: $white;
$clr-calendar-active-cell-color: $white;

/******
  * Forms: TODO: track down component usages and names
  * A form is a structured layout of related input components.
  * There are a variety of variables used to change form elements, including:
  *
  * Usage:
  * ../forms/styles/_checkbox.clarity.scss
  * ../forms/styles/_containers.clarity.scss
  * ../forms/styles/_file.clarity.scss
  * ../forms/styles/_form.clarity.scss
  * ../forms/styles/_input.clarity.scss
  * ../forms/styles/_input-group.clarity.scss
  * ../forms/styles/_mixings.forms.scss
  * ../forms/styles/radio.clarity.scss
  * ../forms/styles/_select.clarity.scss
  * ../forms/styles/_textarea.clarity.scss
  * ../forms/styles/_variables.clarity.scss
  *
  */

//GENERIC
$clr-forms-label-color: $gray-light;
$clr-forms-text-color: $white-alt; // No label, no wrapper
$clr-forms-invalid-color: $app-danger-color;
$clr-forms-subtext-color: hsl(0, 0%, 45%);
$clr-forms-subtext-color: $gray-light;
$clr-forms-border-color: $gray-light;
$clr-forms-focused-color: $app-info-color; // Vertical no wrapper, no label
// Textarea
$clr-forms-textarea-background-color: $black-alt-2;
$clr-forms-select-multiple-background-color: $dropdown-bg;
$clr-forms-select-multiple-border-color: $black;
// Select
// TODO: Properly map these to updated dark theme design
// NOTE: The new form selects seemed to be working like the deprecated form selects so I'm leaving
//       these commented out for now.
//$clr-forms-select-hover-background: rgba(221, 221, 221, 0.5); // CAN WE KEY THIS FROM A KNOWN COLOR
//$clr-forms-select-caret-hover-color: $clr-color-neutral-600;
//$clr-forms-select-caret-color: hsl(0, 0%, 60%);
$clr-forms-select-option-color: $black-alt-2; // Option bg color on chrome/windows is white.
//$clr-forms-select-multiple-background-color: $white;
//$clr-forms-select-multiple-border-color: $clr-color-neutral-400;
//$clr-forms-select-multiple-option-color: $clr-forms-text-color;
// Checkbox
$clr-forms-checkbox-label-color: $gray-light;
$clr-forms-checkbox-background-color: $app-info-color; // Use color here
$clr-forms-checkbox-checked-shadow: inset 0 0 0 0.3rem $clr-forms-checkbox-background-color;
$clr-forms-checkbox-indeterminate-border-color: $gray-light;
$clr-forms-checkbox-mark-color: $black;
$clr-forms-checkbox-disabled-background-color: hsl(204, 10%, 60%);
$clr-forms-checkbox-disabled-mark-color: $black;
// Radio
$clr-forms-radio-label-color: $gray-light;
$clr-forms-radio-selected-shadow: $clr-forms-checkbox-checked-shadow;
$clr-forms-radio-focused-shadow: 0 0 0.1rem 0.1rem $clr-link-active-color;
$clr-forms-radio-disabled-background-color: $black;
$clr-forms-radio-disabled-mark-color: $clr-forms-checkbox-disabled-mark-color;
$clr-forms-radio-disabled-shadow: $clr-forms-checkbox-checked-shadow;
// Range
$clr-forms-range-progress-fill-color: $app-info-color;
$clr-forms-range-track-color: hsl(200, 23%, 25%);

/**********
  * Header
  * Headers provide branding, navigation, search, and access to global application actions such as settings and
  * notifications. There are five header colors in the dark theme.
  *
  * Usage: ../layout/nav/_header.clarity.scss
  * -
  */

$clr-header-bgColor: #0d47a1;
$clr-header-default-bg-color: $clr-header-bgColor;
$clr-header-1-bg-color: $clr-header-bgColor;
$clr-header-2-bg-color: $green-dark;
$clr-header-3-bg-color: $blue-dark;
$clr-header-4-bg-color: $red-dark;
$clr-header-5-bg-color: $purple-dark;
$clr-header-6-bg-color: $black-alt;
// END Header overrides

/**********
 * Icons
 * Icons by default are presentational only meaning they do not provide any context to screen readers
 *
 * Usage: ./_icons.clarity.scss
 */

$clr-icon-color-success: $green;
$clr-icon-color-error: $app-danger-color;
$clr-icon-color-warning: $app-warning-color;
$clr-icon-color-info: $app-info-color;
$clr-icon-color-inverse: $white;
$clr-icon-color-highlight: $app-info-color;
// END: Icons

/*****************
  * Label
  * Labels show concise metadata in a compact format. Here you can set the background-color and font color(s) for the
  * different types of labels.
  *
  * There are five color options and four status types a Clarity label may have.
  */

$clr-label-font-color-light: $white;
$clr-label-font-color-dark: $black;
$clr-label-bg-hover-color: hsl(0, 0%, 34%);
$clr-label-gray-bg-color: $gray;
$clr-label-purple-bg-color: $purple;
$clr-label-blue-bg-color: $blue;
$clr-label-orange-bg-color: $orange;
$clr-label-light-blue-bg-color: $blue-light;
$clr-label-info-bg-color: $app-info-color;
$clr-label-info-font-color: $clr-label-font-color-light;
$clr-label-info-border-color: $clr-label-info-bg-color;
$clr-label-success-bg-color: $success-color;
$clr-label-success-font-color: $clr-label-font-color-light;
$clr-label-success-border-color: $clr-label-success-bg-color;
$clr-label-danger-bg-color: $danger-color;
$clr-label-danger-font-color: $clr-label-font-color-light;
$clr-label-danger-border-color: $clr-label-danger-bg-color;
$clr-label-warning-bg-color: $warning-color;
$clr-label-warning-font-color: $clr-label-font-color-light;
$clr-label-warning-border-color: $clr-label-warning-bg-color;
// END: Labels

/********
  * Login
  * The login page is a predefined form for applications that require authentication.
  * use these variables to set the background-color and the svg used for the bacground image.
  *
  * Usage:
  * - ../layout/_login.clarity.scss
  * - ../image/_icons.clarity.scss (login background image)
  */

$clr-login-background-color: $clr-global-app-background;
$clr-login-background: '%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%20standalone%3D%22no%22%3F%3E%3Csvg%20width%3D%22736px%22%20height%3D%22838px%22%20viewBox%3D%220%200%20736%20838%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%3Ctitle%3Evector%20art%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3C%2Fdefs%3E%3Cg%20id%3D%22symbols%22%20stroke%3D%22none%22%20stroke-width%3D%221%22%20fill%3D%22none%22%20fill-rule%3D%22evenodd%22%3E%3Cg%20id%3D%22Login%22%20transform%3D%22translate(-504.000000%2C%200.000000)%22%3E%3Cg%20id%3D%22replaceable-image%22%20transform%3D%22translate(504.000000%2C%200.000000)%22%3E%3Cg%20id%3D%22vector-art%22%20transform%3D%22translate(-78.000000%2C%20-82.000000)%22%3E%3Crect%20id%3D%22Rectangle-path%22%20fill%3D%22%2322343E%22%20x%3D%220%22%20y%3D%220.38%22%20width%3D%221127.55%22%20height%3D%22921.62%22%3E%3C%2Frect%3E%3Cpolygon%20id%3D%22Shape%22%20fill%3D%22%232F657B%22%20points%3D%220%203.06%200%20599.24%20298.14%20301.43%22%3E%3C%2Fpolygon%3E%3Cpolygon%20id%3D%22Shape%22%20fill%3D%22%23438597%22%20points%3D%220%20408.65%200%20599.24%2095.29%20504.06%22%3E%3C%2Fpolygon%3E%3Cpolygon%20id%3D%22Shape%22%20fill%3D%22%232F657B%22%20points%3D%22918.21%20921.95%20818.63%20822.3%20718.89%20921.95%22%3E%3C%2Fpolygon%3E%3Cpolygon%20id%3D%22Shape%22%20fill%3D%22%233B758E%22%20points%3D%22818.63%20822.3%20298.14%20301.43%200%20599.24%200%20655.02%20266.51%20921.95%20718.89%20921.95%22%3E%3C%2Fpolygon%3E%3Cpolygon%20id%3D%22Shape%22%20fill%3D%22%23579EB2%22%20points%3D%22512.67%20921.95%2095.29%20504.06%200%20599.24%200%20654.97%20267.06%20921.95%22%3E%3C%2Fpolygon%3E%3Cpolygon%20id%3D%22Shape%22%20fill%3D%22%23344B57%22%20points%3D%22266.51%20921.95%200%20655.02%200%20921.95%22%3E%3C%2Fpolygon%3E%3Cpolygon%20id%3D%22Shape%22%20fill%3D%22%23A7C9D5%22%20points%3D%221128%200%20799.58%200%201128%20329.83%22%3E%3C%2Fpolygon%3E%3Cpolygon%20id%3D%22Shape%22%20fill%3D%22%23344B57%22%20points%3D%221128%20329.83%20799.58%200%20599.9%200%20298.14%20301.43%20818.63%20822.3%201128%20513.18%22%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E';
// END LOGIN

/**********
  * Modal
  * Modals provide information or help a user complete a task.
  *
  * Usage: ../modal/_modal.clarity.scss
  */

$clr-modal-close-color: $gray-light;
$clr-modal-bg-color: $dropdown-bg;
$clr-modal-backdrop-color: hsla(0, 0, 0, 0.85);
// END Modal

/***************
  * Nav
  * A sound navigation layout offers a high degree of discoverability and feedback, letting users know where they are at
  * all times and ensuring they can easily get to where they want to go.
  *
  * The variables in this section control the following navigation components
  * - Responsive nav
  * - Side nav
  * - Sub nav
  *
  * Usage:
  * - ../layout/nav/_responsive-nav.clarity.scss
  * - ../layout/nav/_sidenav-nav.clarity.scss
  * - ../layout/nav/_subnav.clarity.scss
  */

// $clr-sliding-panel-width: $clr_baselineRem_15;
// $clr-sliding-panel-width-sm: $clr_baselineRem_12;
$clr-sliding-panel-text-color: hsl(0, 0%, 34%);
// $clr-trigger-position: $clr-sliding-panel-width + $clr_baselineRem_0_5;
// $clr-trigger-position-sm: $clr-sliding-panel-width-sm + $clr_baselineRem_0_5;
// $clr-sliding-panel-z-index: map-get($clr-layers, sidepanel);
// $clr-sliding-panel-backdrop-z-index: map-get($clr-layers, sidepanel-bg);
// $clr-sliding-transition-time: 0.3s;
$clr-transition-style: ease;
$clr-nav-background-color: hsl(0, 0%, 93%);
$clr-nav-background-color: $clr-global-app-background;
$clr-responsive-nav-hover-bg: $clr-global-selection-color;
$clr-sliding-panel-text-color: $white;
$clr-sidenav-border-color: $gray-alt;
$clr-sidenav-link-hover-color: $clr-global-selection-color;
$clr-subnav-bgColor: $black-alt-2;
$clr-nav-shadow: 0 -0.05rem 0 hsl(208, 16%, 34%) inset;
// END Nav

/**************
  * Progress Bars
  * A progress bar is a linear indicator for providing feedback about an ongoing, user-initiated process.
  *
  * Usage: ../progress/progress-bars/_progress-bars./clarity.scss
  */

$clr-progress-defaultBarColor: $app-info-color;
$clr-progress-success-color: $green;
$clr-progress-danger-color: $app-danger-color;
$clr-progress-warning-color: $clr-progress-danger-color;
$clr-progress-bgColor: hsl(200, 23%, 25%);
// END Progress Bars

/*********
  * Signpost
  * The signpost is a convenient, lightweight way to show contextual help of information without taking the user out of
  * the current context.
  *
  * Usage: ../popover/signpost/signposts.clarity.scss
  */

$clr-signpost-action-color: $white-alt;
$clr-signpost-action-hover-color: $app-info-color;
$clr-signpost-content-bg-color: $dropdown-bg;
$clr-signpost-content-border-color: $black;
$clr-signpost-border-size: 0.5rem;
$clr-signpost-pointer-border: $clr-signpost-border-size solid $clr-signpost-content-border-color;
$clr-signpost-pointer-invisible-border: $clr-signpost-border-size solid transparent;
$clr-signpost-pointer-psuedo-border: $clr-signpost-border-size solid $clr-signpost-content-bg-color;
// END Signpost overrides

/*********
  * Spinner
  * A spinner is visual indicator of an ongoing, user-initiated process.
  *
  * Usage: ../progress/spinner/_spinner.clarity.scss
  */

$clr-spinner-color: $app-info-color;
$clr-spinner-bg-color: hsl(200, 23%, 25%);
$clr-spinner-opacity: 1;
// END Spinners

/**********
  * Tabs
  * Tabs divide content into separate views which users navigate between.
  *
  * Usage: ../layout/nav/_nav.clarity.scss
  */

$clr-nav-box-shadow-color: hsl(208, 16%, 34%);
$clr-nav-active-box-shadow-color: $app-info-color;
$clr-nav-link-active-color: $white;
$clr-nav-link-color: $gray-light;
// END: Tabs

/**
  * Timeline
  * Use a timeline to show progress on concrete steps with a specific end goal.
 */

// colors
$clr-timeline-line-color: $gray-light;
$clr-timeline-step-header-color: hsl(210, 17%, 93%);
$clr-timeline-step-title-color: $gray-light; // #565656
$clr-timeline-step-description-color: $gray-light; // #565656
$clr-timeline-incomplete-step-color: hsl(210, 17%, 93%);
$clr-timeline-current-step-color: $app-info-color;
$clr-timeline-success-step-color: $green;
$clr-timeline-error-step-color: $app-danger-color;
// END Timeline

/**********
  * Tooltip
  * A tooltip provides a short description of a UI element.
  *
  * Usage: ../popover/tooltip/_tooltips.clarity.scss
  */

$clr-tooltip-color: $black;
$clr-tooltip-background-color: $white;
// END: Tooltip

/**********
  * Tree View
  * A tree is a hierarchical component that shows the visual representation of the parent-child relationship between
  * nodes.
  *
  * Usage: ../data/tree-view/_tree-view.clarity.scss
  */

$clr-tree-node-caret-link-hover-color: $white;
$clr-tree-link-hover-color: hsl(0, 0%, 93%);
$clr-tree-link-hover-color: $clr-global-hover-bg-color;
$clr-tree-link-selection-color: $clr-global-selection-color;
$clr-tree-link-text-color: $gray-light;
$clr-tree-node-caret-color: $gray-light;
// END Tree View variables

/**********
  * Typography
  * Clarity uses the geometric sans-serif font, Metropolis.
  *
  * Usage:
  * - ../typography/_typography.clarity.scss
  * - ../data/datagrid/_datagrid.clarity.scss
  */

$clr-global-font-color: $black;
$clr-global-font-color-secondary: $black;
$clr-h1-color: $clr-global-font-color;
$clr-h2-color: $clr-global-font-color;
$clr-h3-color: $clr-global-font-color;
$clr-h4-color: $clr-global-font-color;
$clr-h5-color: $clr-global-font-color;
$clr-h6-color: $clr-global-font-color-secondary;
$clr-p1-color: $clr-global-font-color-secondary;
$clr-p2-color: $clr-global-font-color-secondary;
$clr-p3-color: $clr-global-font-color-secondary;
$clr-p4-color: $clr-global-font-color;
$clr-p5-color: $clr-global-font-color;
$clr-p6-color: $clr-global-font-color;
$clr-p7-color: $clr-global-font-color;
$clr-p8-color: $clr-global-font-color;

/**********
  * Vertical Nav
  * This is a vertically-aligned navigational component.
  *
  * Usage: ../layout/vertical-nav/_vertical-nav.clarity.scss
  */

// $clr-vertical-nav-item-height: $clr_baselineRem_1_5;
$clr-vertical-nav-item-color: $black;
$clr-vertical-nav-item-active-color: $black;
$clr-vertical-nav-bg-color: $clr-global-app-background;
$clr-vertical-nav-active-bg-color: $clr-global-selection-color;
$clr-vertical-nav-hover-bg-color: $clr-global-hover-bg-color;
$clr-vertical-nav-icon-active-color: $black;
$clr-vertical-nav-toggle-icon-color: $black;
$clr-vertical-nav-trigger-divider-border-color: hsl(199, 19%, 17%);
// END Vertical Nav

/**********
  * Wizard
  * Wizards provide a way to go through a sequence of steps that form an end to end workflow..
  *
  * Usage: ../wizard/_wizard.clarity.scss
  */

$clr-wizard-sidenav-bgcolor: $clr-global-app-background;
$clr-wizard-sidenav-text--active: $white;
$clr-wizard-stepnav-active-bgcolor: $clr-global-selection-color;
$clr-wizard-stepnav-border-color: hsl(201, 14%, 27%);
$clr-wizard-stepnav-border-color--active: $green;
$clr-wizard-step-nav-border-color: $gray-alt;
$clr-wizard-sidenav-text: $gray-light;
$clr-wizard-title-text: $white-alt;
$clr-wizard-main-textColor: $gray-light;
$clr-wizard-stepnav-error-color: $app-danger-color;
// END: Wizard